Проведите первичный анализ данных
Задание 1
1. Скачать файл в уроке
2. Считать данные с помощью pandas
3. Вывести на экран первые 5 строк
4. Посмотреть на описание признаков и на их содержание
import pandas as pd
import numpy as np
df = pd.read_csv('./kc_house_data.csv', encoding="UTF-8")
df
id	date	price	bedrooms	bathrooms	sqft_living	sqft_lot	floors	waterfront	view	...	grade	sqft_above	sqft_basement	yr_built	yr_renovated	zipcode	lat	long	sqft_living15	sqft_lot15
0	7129300520	20141013T000000	221900.0	3	1.00	1180	5650	1.0	0	0	...	7	1180	0	1955	0	98178	47.5112	-122.257	1340	5650
1	6414100192	20141209T000000	538000.0	3	2.25	2570	7242	2.0	0	0	...	7	2170	400	1951	1991	98125	47.7210	-122.319	1690	7639
2	5631500400	20150225T000000	180000.0	2	1.00	770	10000	1.0	0	0	...	6	770	0	1933	0	98028	47.7379	-122.233	2720	8062
3	2487200875	20141209T000000	604000.0	4	3.00	1960	5000	1.0	0	0	...	7	1050	910	1965	0	98136	47.5208	-122.393	1360	5000
4	1954400510	20150218T000000	510000.0	3	2.00	1680	8080	1.0	0	0	...	8	1680	0	1987	0	98074	47.6168	-122.045	1800	7503
...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...	...
21608	263000018	20140521T000000	360000.0	3	2.50	1530	1131	3.0	0	0	...	8	1530	0	2009	0	98103	47.6993	-122.346	1530	1509
21609	6600060120	20150223T000000	400000.0	4	2.50	2310	5813	2.0	0	0	...	8	2310	0	2014	0	98146	47.5107	-122.362	1830	7200
21610	1523300141	20140623T000000	402101.0	2	0.75	1020	1350	2.0	0	0	...	7	1020	0	2009	0	98144	47.5944	-122.299	1020	2007
21611	291310100	20150116T000000	400000.0	3	2.50	1600	2388	2.0	0	0	...	8	1600	0	2004	0	98027	47.5345	-122.069	1410	1287
21612	1523300157	20141015T000000	325000.0	2	0.75	1020	1076	2.0	0	0	...	7	1020	0	2008	0	98144	47.5941	-122.299	1020	1357
21613 rows × 21 columns

df.head()
id	date	price	bedrooms	bathrooms	sqft_living	sqft_lot	floors	waterfront	view	...	grade	sqft_above	sqft_basement	yr_built	yr_renovated	zipcode	lat	long	sqft_living15	sqft_lot15
0	7129300520	20141013T000000	221900.0	3	1.00	1180	5650	1.0	0	0	...	7	1180	0	1955	0	98178	47.5112	-122.257	1340	5650
1	6414100192	20141209T000000	538000.0	3	2.25	2570	7242	2.0	0	0	...	7	2170	400	1951	1991	98125	47.7210	-122.319	1690	7639
2	5631500400	20150225T000000	180000.0	2	1.00	770	10000	1.0	0	0	...	6	770	0	1933	0	98028	47.7379	-122.233	2720	8062
3	2487200875	20141209T000000	604000.0	4	3.00	1960	5000	1.0	0	0	...	7	1050	910	1965	0	98136	47.5208	-122.393	1360	5000
4	1954400510	20150218T000000	510000.0	3	2.00	1680	8080	1.0	0	0	...	8	1680	0	1987	0	98074	47.6168	-122.045	1800	7503
5 rows × 21 columns

df.shape
(21613, 21)
Задание 2.
Проведите первичный анализ данных
1. Изучите типы данных
2. Найдите количество пропущенных ячеек в данных
3. Посчитайте основные статистики по всем признакам и поизучайте их
df.info()
<class 'pandas.core.frame.DataFrame'>
RangeIndex: 21613 entries, 0 to 21612
Data columns (total 21 columns):
 #   Column         Non-Null Count  Dtype
---  ------         --------------  -----
 0   id             21613 non-null  int64
 1   date           21613 non-null  object
 2   price          21613 non-null  float64
 3   bedrooms       21613 non-null  int64
 4   bathrooms      21613 non-null  float64
 5   sqft_living    21613 non-null  int64
 6   sqft_lot       21613 non-null  int64
 7   floors         21613 non-null  float64
 8   waterfront     21613 non-null  int64
 9   view           21613 non-null  int64
 10  condition      21613 non-null  int64
 11  grade          21613 non-null  int64
 12  sqft_above     21613 non-null  int64
 13  sqft_basement  21613 non-null  int64
 14  yr_built       21613 non-null  int64
 15  yr_renovated   21613 non-null  int64
 16  zipcode        21613 non-null  int64
 17  lat            21613 non-null  float64
 18  long           21613 non-null  float64
 19  sqft_living15  21613 non-null  int64
 20  sqft_lot15     21613 non-null  int64
dtypes: float64(5), int64(15), object(1)
memory usage: 3.5+ MB
Найдите количество пропущенных ячеек в данных

df.isnull().sum().values
array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      dtype=int64)
Посчитайте основные статистики по всем признакам и поизучайте их

df.describe()
id	price	bedrooms	bathrooms	sqft_living	sqft_lot	floors	waterfront	view	condition	grade	sqft_above	sqft_basement	yr_built	yr_renovated	zipcode	lat	long	sqft_living15	sqft_lot15
count	2.161300e+04	2.161300e+04	21613.000000	21613.000000	21613.000000	2.161300e+04	21613.000000	21613.000000	21613.000000	21613.000000	21613.000000	21613.000000	21613.000000	21613.000000	21613.000000	21613.000000	21613.000000	21613.000000	21613.000000	21613.000000
mean	4.580302e+09	5.400881e+05	3.370842	2.114757	2079.899736	1.510697e+04	1.494309	0.007542	0.234303	3.409430	7.656873	1788.390691	291.509045	1971.005136	84.402258	98077.939805	47.560053	-122.213896	1986.552492	12768.455652
std	2.876566e+09	3.671272e+05	0.930062	0.770163	918.440897	4.142051e+04	0.539989	0.086517	0.766318	0.650743	1.175459	828.090978	442.575043	29.373411	401.679240	53.505026	0.138564	0.140828	685.391304	27304.179631
min	1.000102e+06	7.500000e+04	0.000000	0.000000	290.000000	5.200000e+02	1.000000	0.000000	0.000000	1.000000	1.000000	290.000000	0.000000	1900.000000	0.000000	98001.000000	47.155900	-122.519000	399.000000	651.000000
25%	2.123049e+09	3.219500e+05	3.000000	1.750000	1427.000000	5.040000e+03	1.000000	0.000000	0.000000	3.000000	7.000000	1190.000000	0.000000	1951.000000	0.000000	98033.000000	47.471000	-122.328000	1490.000000	5100.000000
50%	3.904930e+09	4.500000e+05	3.000000	2.250000	1910.000000	7.618000e+03	1.500000	0.000000	0.000000	3.000000	7.000000	1560.000000	0.000000	1975.000000	0.000000	98065.000000	47.571800	-122.230000	1840.000000	7620.000000
75%	7.308900e+09	6.450000e+05	4.000000	2.500000	2550.000000	1.068800e+04	2.000000	0.000000	0.000000	4.000000	8.000000	2210.000000	560.000000	1997.000000	0.000000	98118.000000	47.678000	-122.125000	2360.000000	10083.000000
max	9.900000e+09	7.700000e+06	33.000000	8.000000	13540.000000	1.651359e+06	3.500000	1.000000	4.000000	5.000000	13.000000	9410.000000	4820.000000	2015.000000	2015.000000	98199.000000	47.777600	-121.315000	6210.000000	871200.000000
df.describe(include='object')
date
count	21613
unique	372
top	20140623T000000
freq	142
Задание 3.
Ответьте на несколько вопросов
3.1 В каком диапазоне изменяются стоимости недвижимости?

df['price'].value_counts()
350000.0     172
450000.0     172
550000.0     159
500000.0     152
425000.0     150
            ...
607010.0       1
1362500.0      1
298800.0       1
957500.0       1
402101.0       1
Name: price, Length: 4028, dtype: int64
f'минимальная цена {df.price.min()}', f'максимальгая цена {df.price.max()}'
('минимальная цена 75000.0', 'максимальгая цена 7700000.0')
3.2 Какую долю в среднем занимают жилая площадь от всей площади по всем домам?

df['sqft_living'].mean()/df['sqft_lot'].mean() * 100, "%"
(13.76781757959227, '%')
3.3 Как много домов с разными этажами в данных?

df['floors'].value_counts()
1.0    10680
2.0     8241
1.5     1910
3.0      613
2.5      161
3.5        8
Name: floors, dtype: int64
3.4 Насколько хорошие состояния у домов в данных?

df['condition'].value_counts(normalize=True)*100,'%'
(3    64.919262
 4    26.275852
 5     7.870263
 2     0.795817
 1     0.138805
 Name: condition, dtype: float64,
 '%')
3.5 Найдите года, когда построили первый дом, когда построили последний дом в данных?

df['yr_built'].min(), df['yr_built'].max()
(1900, 2015)
Задание 4.
Ответьте на несколько вопросов
4.1 Сколько в среднем стоят дома, у которых 2 спальни?

df[df['bedrooms'] == 2]['price'].mean()
401372.681884058
4.2 Какая в среднем общая площадь домов, у которых стоимость больше 600 000?

df[df['price'] >= 600000]['sqft_lot'].mean()
20454.783537543197
4.3 Как много домов коснулся ремонт?

df[(df['yr_renovated'] != 0)].shape[0]
914
4.4 Насколько в среднем стоимость домов с оценкой grade домов выше 10 отличается от стоимости домов с оценкой grade меньше 4?

Cредняя стоимость домов с оценкой grade домов выше 10:
df[(df['grade'] > 10)]["price"].mean()
1678635.1175298805
Cредняя стоимость домов с оценкой grade домов меньше 4:
df[(df['grade'] < 4)]["price"].mean()
189750.0
Средний прирост цен
df[(df['grade'] > 10)]["price"].mean() - df[(df['grade'] < 4)]["price"].mean()
1488885.1175298805
Задание 5.
Ответьте на несколько вопросов
5.1 Выберите дом клиенту
Клиент хочет дом с видом на набережную, как минимум с тремя ванными и с подвалом. Сколько вариантов есть у клиента?
df[
(df['waterfront'] == 1) &
(df['bathrooms'] >= 3) &
~(df['sqft_basement'] == 0)
].shape[0]
41
5.2 Выберите дом клиенту
Клиент хочет дом либо с очень красивым видом из окна, либо с видом на набережную, в очень хорошем состоянии и год постройки не меньше 1980 года. В какой ценовом диапазоне будут дома?
client_choice = df[
(df['view'] == 4) |
(df['waterfront'] == 1) &
(df['condition'] == 5) &
(df['yr_built'] >= 1980)
]['price']
client_choice.min(),client_choice.max()
(252000.0, 6885000.0)
client_choice2 = df[
(df['view'] == 4) |
(df['waterfront'] == 1) &
(df['condition'] == 5) &
(df['yr_built'] >= 1980) &
(df['price'].min() < df['price'].max())
].sort_values('price').head(47)[['view','waterfront','condition','yr_built', 'price']]
client_choice2
view	waterfront	condition	yr_built	price
1734	4	0	1	1910	252000.0
18275	4	1	3	1935	285000.0
14353	4	0	4	1946	325000.0
11556	4	1	3	1955	357000.0
7131	4	0	4	1922	361000.0
264	4	1	5	1936	369900.0
18848	4	1	3	1984	380000.0
8277	4	1	3	1919	400000.0
11831	4	0	3	1972	400000.0
9198	4	0	3	1973	400000.0
8386	4	0	3	1950	408000.0
13810	4	0	3	1955	415000.0
11518	4	0	4	1958	420000.0
3829	4	1	5	1903	429592.0
13155	4	0	4	1968	456000.0
14827	4	1	3	1943	465000.0
1949	4	1	4	1943	480000.0
18792	4	0	3	1989	490000.0
13525	4	1	4	1951	500000.0
12985	4	0	3	1986	500000.0
8156	4	1	3	1948	503000.0
18789	4	0	3	1982	510000.0
15330	4	1	4	1923	520000.0
18037	4	1	4	1937	528000.0
15006	4	0	3	1988	535000.0
17474	4	1	3	1912	540000.0
5125	4	0	3	1948	540000.0
4912	4	1	5	1947	549000.0
1832	4	0	4	1939	550000.0
18597	4	1	4	1905	570000.0
15788	4	0	5	1908	572000.0
20387	4	0	3	2008	580000.0
19771	4	0	3	2008	580000.0
13750	4	0	3	1985	599950.0
13312	4	1	4	1976	600000.0
14471	4	1	4	1965	600000.0
8829	4	0	3	1977	603500.0
9073	4	1	4	1926	625000.0
9856	4	1	4	1970	629000.0
13966	4	1	3	1913	649000.0
9085	4	1	3	1965	650000.0
230	4	1	3	1915	655000.0
15371	4	1	1	1926	658000.0
6381	4	0	3	2004	675000.0
10338	4	0	4	1956	680000.0
13198	4	0	4	1941	680000.0
13238	4	1	3	1930	685000.0
5.3 Выберите дом клиенту
Клиент хочет дом без подвала, с двумя этажами, стоимостью до 150000. Какая оценка по состоянию у таких домов в среднем?
client_choice3 = df[
(df['sqft_basement'] == 0) &
(df['floors'] == 2) &
(df['price'] < 150000) &
(df['price'].min() < df['price'].max())
]
client_choice3
id	date	price	bedrooms	bathrooms	sqft_living	sqft_lot	floors	waterfront	view	...	grade	sqft_above	sqft_basement	yr_built	yr_renovated	zipcode	lat	long	sqft_living15	sqft_lot15
2589	5061300030	20140508T000000	134000.0	2	1.50	980	5000	2.0	0	0	...	7	980	0	1922	2003	98014	47.7076	-121.359	1040	5000
10105	5466310060	20150324T000000	139500.0	2	1.50	1230	1561	2.0	0	0	...	7	1230	0	1983	0	98042	47.3768	-122.149	1660	2243
15610	7614100080	20150211T000000	140000.0	3	1.75	1270	8991	2.0	0	0	...	7	1270	0	1981	0	98042	47.3563	-122.149	1270	8993
18332	9272202260	20140924T000000	130000.0	3	1.00	1200	7000	2.0	0	0	...	7	1200	0	1908	0	98116	47.5883	-122.384	3290	6000
18939	4239400300	20141129T000000	90000.0	3	1.00	980	2490	2.0	0	0	...	6	980	0	1969	0	98092	47.3170	-122.182	980	3154
18988	7399100210	20141126T000000	140000.0	3	1.50	1200	2002	2.0	0	0	...	8	1200	0	1966	0	98055	47.4659	-122.189	1270	1848
6 rows × 21 columns

Средняя оценка по состоянию у этих домов
client_choice3.condition.mean()
2.8333333333333335